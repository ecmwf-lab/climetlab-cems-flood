# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: build

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

  release:
    types: [created]

jobs:
  quality:
    name: Code QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install black flake8 isort
      - run: isort --version
      - run: black --version
      - run: isort --check .
      - run: black --check .
      - run: flake8 .

  checks:
    strategy:
      fail-fast: false
      matrix:
        platform: ["ubuntu-latest"]
        python-version: ["3.8"]
        #platform: ["ubuntu-latest", "macos-latest", "windows-latest"]
        #python-version: ["3.6", "3.7", "3.8", "3.9"]

    
    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    
    needs: quality

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          
          python-version: ${{ matrix.python-version }}
          

      - name: Updating pip
        run: |
          python -m pip install --upgrade pip
          pip debug --verbose

      - run: pip install climetlab

      - name: Installing climetlab_cems_flood
        run: pip install -e .

      - name: Tests
        run: |
          pip install pytest
          pip freeze
          pip install nbformat nbconvert ipykernel # dependencies for test/test_notebooks.py
          pytest
  deploy:

    
    if: ${{ github.event_name == 'release' }}
    

    name: Upload to Pypi
    needs: checks

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Check version
      run: |
        release=${GITHUB_REF##*/}
        version=$(python setup.py --version)
        test "$release" == "$version"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Build and publish
      env:
      
        # Create an account on https://pypi.org/
        # Add your user/password as secrets in the github repository.
        # see https://docs.github.com/en/actions/reference/encrypted-secrets
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      
      run: |
        python setup.py sdist --verbose
        twine upload dist/* --verbose
